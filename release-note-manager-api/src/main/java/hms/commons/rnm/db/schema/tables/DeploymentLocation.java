/*
 * This file is generated by jOOQ.
 */
package hms.commons.rnm.db.schema.tables;


import hms.commons.rnm.db.schema.DefaultSchema;
import hms.commons.rnm.db.schema.Keys;
import hms.commons.rnm.db.schema.enums.DeploymentLocationLocationCode;
import hms.commons.rnm.db.schema.tables.records.DeploymentLocationRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeploymentLocation extends TableImpl<DeploymentLocationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>deployment_location</code>
     */
    public static final DeploymentLocation DEPLOYMENT_LOCATION = new DeploymentLocation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeploymentLocationRecord> getRecordType() {
        return DeploymentLocationRecord.class;
    }

    /**
     * The column <code>deployment_location.customer_id</code>.
     */
    public final TableField<DeploymentLocationRecord, Integer> CUSTOMER_ID = createField(DSL.name("customer_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>deployment_location.location_code</code>.
     */
    public final TableField<DeploymentLocationRecord, DeploymentLocationLocationCode> LOCATION_CODE = createField(DSL.name("location_code"), SQLDataType.VARCHAR(10).nullable(false).asEnumDataType(hms.commons.rnm.db.schema.enums.DeploymentLocationLocationCode.class), this, "");

    /**
     * The column <code>deployment_location.created_date</code>.
     */
    public final TableField<DeploymentLocationRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("created_date"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>deployment_location.last_updated_time</code>.
     */
    public final TableField<DeploymentLocationRecord, LocalDateTime> LAST_UPDATED_TIME = createField(DSL.name("last_updated_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private DeploymentLocation(Name alias, Table<DeploymentLocationRecord> aliased) {
        this(alias, aliased, null);
    }

    private DeploymentLocation(Name alias, Table<DeploymentLocationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>deployment_location</code> table reference
     */
    public DeploymentLocation(String alias) {
        this(DSL.name(alias), DEPLOYMENT_LOCATION);
    }

    /**
     * Create an aliased <code>deployment_location</code> table reference
     */
    public DeploymentLocation(Name alias) {
        this(alias, DEPLOYMENT_LOCATION);
    }

    /**
     * Create a <code>deployment_location</code> table reference
     */
    public DeploymentLocation() {
        this(DSL.name("deployment_location"), null);
    }

    public <O extends Record> DeploymentLocation(Table<O> child, ForeignKey<O, DeploymentLocationRecord> key) {
        super(child, key, DEPLOYMENT_LOCATION);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<DeploymentLocationRecord> getPrimaryKey() {
        return Keys.KEY_DEPLOYMENT_LOCATION_PRIMARY;
    }

    @Override
    public List<UniqueKey<DeploymentLocationRecord>> getKeys() {
        return Arrays.<UniqueKey<DeploymentLocationRecord>>asList(Keys.KEY_DEPLOYMENT_LOCATION_PRIMARY);
    }

    @Override
    public List<ForeignKey<DeploymentLocationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DeploymentLocationRecord, ?>>asList(Keys.DEPLOYMENT_LOCATION_IBFK_1);
    }

    public Customer customer() {
        return new Customer(this, Keys.DEPLOYMENT_LOCATION_IBFK_1);
    }

    @Override
    public DeploymentLocation as(String alias) {
        return new DeploymentLocation(DSL.name(alias), this);
    }

    @Override
    public DeploymentLocation as(Name alias) {
        return new DeploymentLocation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DeploymentLocation rename(String name) {
        return new DeploymentLocation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DeploymentLocation rename(Name name) {
        return new DeploymentLocation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, DeploymentLocationLocationCode, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
