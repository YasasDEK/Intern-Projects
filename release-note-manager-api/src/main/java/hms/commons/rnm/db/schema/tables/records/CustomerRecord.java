/*
 * This file is generated by jOOQ.
 */
package hms.commons.rnm.db.schema.tables.records;


import hms.commons.rnm.db.schema.tables.Customer;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerRecord extends UpdatableRecordImpl<CustomerRecord> implements Record4<Integer, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>customer.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>customer.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>customer.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>customer.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>customer.created_date</code>.
     */
    public void setCreatedDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>customer.created_date</code>.
     */
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>customer.last_updated_time</code>.
     */
    public void setLastUpdatedTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>customer.last_updated_time</code>.
     */
    public LocalDateTime getLastUpdatedTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Customer.CUSTOMER.ID;
    }

    @Override
    public Field<String> field2() {
        return Customer.CUSTOMER.NAME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Customer.CUSTOMER.CREATED_DATE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Customer.CUSTOMER.LAST_UPDATED_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedDate();
    }

    @Override
    public LocalDateTime component4() {
        return getLastUpdatedTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedDate();
    }

    @Override
    public LocalDateTime value4() {
        return getLastUpdatedTime();
    }

    @Override
    public CustomerRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CustomerRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public CustomerRecord value3(LocalDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public CustomerRecord value4(LocalDateTime value) {
        setLastUpdatedTime(value);
        return this;
    }

    @Override
    public CustomerRecord values(Integer value1, String value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerRecord
     */
    public CustomerRecord() {
        super(Customer.CUSTOMER);
    }

    /**
     * Create a detached, initialised CustomerRecord
     */
    public CustomerRecord(Integer id, String name, LocalDateTime createdDate, LocalDateTime lastUpdatedTime) {
        super(Customer.CUSTOMER);

        setId(id);
        setName(name);
        setCreatedDate(createdDate);
        setLastUpdatedTime(lastUpdatedTime);
    }
}
